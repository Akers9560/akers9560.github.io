<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Win10使用PowerShell首次执行hexo，出现”无法加载文件 xxx\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本“解决办法</title>
    <url>/2021/07/21/Win10%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<hr>
<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Win10使用<code>npm</code>安装<code>hexo</code>之后，使用<code>PowerShell</code>执行<code>hexo init blog</code>报错，”无法加载文件 xxx\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本“</p>
<hr>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol>
<li><p>使用<code>Win</code>+<code>i</code>组合键打开设置面板。</p>
</li>
<li><p>在搜索框中输入<code>powershell</code>，弹出下拉框。</p>
</li>
<li><p>在下拉框中选择”允许本地PowerShell脚本在不签名的情况下运行“，此时会跳转到”开发者选项-&gt;PowerShell-&gt;应用一下设置以执行PowerShell脚本“。</p>
</li>
<li><p>下面的复选框会默认打勾（如果没打勾就自己打上），然后点击应用。</p>
</li>
<li><p>再次打开<code>PowerShell</code>，成功运行<code>hexo init blog</code>。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu20.04开机启动时出现A start job is running for wait for network to be Configured长时间等待的解决办法</title>
    <url>/2021/07/28/Ubuntu20.04%E5%90%AF%E5%8A%A8%E6%97%B6%E7%BD%91%E7%BB%9C%E9%95%BF%E6%97%B6%E9%97%B4%E7%AD%89%E5%BE%85%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>官方Ubuntu20.04安装完成之后，开机启动时出现A start job is running for wait for network to be Configured (10s / no limit)，会造成长时间等待，开机时间过长。</p>
<h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><ol>
<li>系统启动，如果没有接入网线或者网线没有插好，会导致获取不了网络长时间等待</li>
<li>新增加了网口配置，但是配置错误；或者新增加的网口对应的网线不通</li>
</ol>
<hr>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>一、暴力解决，设置等待超时时间</strong></p>
<ol>
<li><p>一直等待是因为下面这个服务无法正常启动造成的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure>
<p><img src="systemd-networkd-wait-online-status.png" alt="查看状态为Failed"></p>
</li>
<li><p>修改服务对应的配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/network-online.target.wants/systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure></li>
<li><p>在<code>[Service]</code>下添加一行，设置为等待5秒超时</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TimeoutStartSec=5sec</span><br></pre></td></tr></table></figure>
<p>修改前</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/lib/systemd/systemd-networkd-wait-online</span><br><span class="line">RemainAfterExit=yes</span><br></pre></td></tr></table></figure>
<p>修改后</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/lib/systemd/systemd-networkd-wait-online</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">TimeoutStartSec=5sec</span><br></pre></td></tr></table></figure></li>
<li><p>修改完成之后重启系统，此时等待5秒超时系统就会自动跳过等待的步骤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo reboot now</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<p><strong>二、修改网口配置</strong></p>
<ol>
<li><p>查看服务运行状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure>
<p><img src="systemd-networkd-wait-online-status.png" alt="查看状态为Failed"></p>
</li>
<li><p>查看网口是否正常配置，其中<code>enp161s0f0</code>网口一直处于<code>configuring</code>状态，可见就是这个网口造成的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">networkctl</span><br></pre></td></tr></table></figure>
<p><img src="networkctl-status.png" alt="查看网口配置"></p>
</li>
<li><p>查找这个网口是在哪个配置文件里面配置的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo grep -l enp161s0f0 /etc/netplan/*</span><br></pre></td></tr></table></figure>
<p><img src="netplan-config.png" alt="查找网口配置文件"></p>
</li>
<li><p>修改文件配置，我们需要去掉这个配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/netplan/00-installer-config.yaml</span><br></pre></td></tr></table></figure>
<p><img src="comment-error-config.png" alt="注释掉对应的网口"></p>
</li>
<li><p>检查配置文件是否修改正确</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo netplan generate</span><br></pre></td></tr></table></figure></li>
<li><p>应用网络配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure></li>
<li><p>查看网口配置，没有处于<code>configuring</code>状态的网口了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">networkctl</span><br></pre></td></tr></table></figure>
<p><img src="networkctl-status2.png" alt="查看网口配置"></p>
</li>
<li><p>重启服务，查看服务状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status systemd-networkd-wait-online.service</span><br></pre></td></tr></table></figure>
<p><img src="systemd-nerworkd-wait-online-active.png" alt="服务运行成功"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
  </entry>
  <entry>
    <title>Linux修改SSH默认的22端口及关闭密码认证登录</title>
    <url>/2021/07/26/Ubuntu%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3%E5%8F%8A%E5%85%B3%E9%97%AD%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<hr>
<h3 id="修改端口"><a href="#修改端口" class="headerlink" title="修改端口"></a>修改端口</h3><ol>
<li><p>修改sshd配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li>
<li><p>编辑添加新的端口，默认Port=22</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Port=8888</span><br></pre></td></tr></table></figure></li>
<li><p>重启sshd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h3 id="关闭密码登录"><a href="#关闭密码登录" class="headerlink" title="关闭密码登录"></a>关闭密码登录</h3><ol>
<li><p>修改sshd配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li>
<li><p>找到<code>PasswordAuthentication</code>，修改<code>yes</code>为<code>no</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure></li>
<li><p>重启sshd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>SSH</category>
        <category>Ubuntu</category>
      </categories>
  </entry>
  <entry>
    <title>修改Spring Boot启动时的默认图案Banner</title>
    <url>/2019/01/18/old_website/Java%E4%BF%AE%E6%94%B9Spring%20Boot%E5%90%AF%E5%8A%A8%E6%97%A5%E5%BF%97%E7%9A%84%E9%BB%98%E8%AE%A4%E5%9B%BE%E6%A1%88Banner/</url>
    <content><![CDATA[<hr>
<h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><p><strong>一、替换banner</strong></p>
<ol>
<li>在src/main/resources路径下新建一个banner.txt文件，并输入想要的内容。</li>
<li>可以使用在线生成文字图案的网站生成  <a href="http://patorjk.com/software/taag/">在线生成文字图案</a></li>
</ol>
<p><strong>二、关闭banner</strong></p>
<p>修改main方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//SpringApplication.run(Application.class, args);</span></span><br><span class="line">		SpringApplication newRun= <span class="keyword">new</span> SpringApplication(Application.class); </span><br><span class="line">		newRun.setBannerMode(Banner.Mode.OFF);</span><br><span class="line">		newRun.run(args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
  </entry>
  <entry>
    <title>Linux使用tar打包和解压</title>
    <url>/2019/09/24/old_website/Ubuntu%E4%BD%BF%E7%94%A8tar%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8E%8B/</url>
    <content><![CDATA[<hr>
<h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><p>打包一个目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zcf ***.tar.gz /path</span><br></pre></td></tr></table></figure>

<p>解压文件到一个目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf ***.tar.gz</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SSH</category>
        <category>Ubuntu</category>
      </categories>
  </entry>
  <entry>
    <title>搭建Omni（USDT）本地测试环境，并模拟发布USDT代币</title>
    <url>/2021/07/29/old_website/%E6%90%AD%E5%BB%BAOmni%EF%BC%88USDT%EF%BC%89%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="运行Omni钱包Regtest（本地测试环境）节点"><a href="#运行Omni钱包Regtest（本地测试环境）节点" class="headerlink" title="运行Omni钱包Regtest（本地测试环境）节点"></a>运行Omni钱包Regtest（本地测试环境）节点</h3><p>文章基于<code>Windows10</code>系统上运行<code>Omnicore</code>，其它系统同理</p>
<ol>
<li><p>下载<code>Omnicore</code>，解压</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">https://<span class="title">github.com</span>/<span class="title">OmniLayer</span>/<span class="title">omnicore</span>/<span class="title">releases</span>/<span class="title">download</span>/<span class="title">v0</span>.11.0/<span class="title">omnicore</span>-0.11.0-<span class="title">win64.zip</span></span></span><br></pre></td></tr></table></figure></li>
<li><p>进入到目录下</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\Administrator\Downloads\omnicore-<span class="number">0</span>.<span class="number">11</span>.<span class="number">0</span>\bin</span><br></pre></td></tr></table></figure></li>
<li><p>运行本地测试节点</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omnicore-qt.exe -datadir=./ -rpcuser=rpcuser123 -rpcpassword=password123 -server=<span class="number">1</span> -rpcallowip=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span> -port=<span class="number">18444</span> -rpcport=<span class="number">10332</span> -listen -chain=regtest -fallbackfee=<span class="number">0</span>.<span class="number">00001</span></span><br><span class="line">#-rpcuser=&lt;user&gt; 设置JSON-RPC连接认证的用户</span><br><span class="line">#-rpcpassword=&lt;pw&gt; 设置JSON-RPC连接认证的密码</span><br><span class="line">#-server 开启命令行和JSON-RPC调用</span><br><span class="line">#-datadir=&lt;<span class="built_in">dir</span>&gt; 数据存放目录，相对目录时请使用`<span class="built_in">CMD</span>`工具，`Power Shell`无法使用相对路径运行</span><br><span class="line">#-rpcallowip=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span> 设置允许JSON-RPC调用的IP，这里测试网络设置的<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>，正式网络谨慎使用</span><br><span class="line">#-port=<span class="number">18444</span> 节点网络监听端口</span><br><span class="line">#-rpcport=<span class="number">18443</span> 节点JSON-RPC监听端口</span><br><span class="line">#-listen 允许外部连接，使用多节点时需要开启</span><br><span class="line">#-chain=regtest 指定为本地测试环境，不指定默认为主网</span><br><span class="line">#-fallbackfee=<span class="number">0</span>.<span class="number">00001</span></span><br></pre></td></tr></table></figure></li>
<li><p>启动之后经过短暂的加载页面，可以看到如下界面，目录也在当前目录下<br><img src="omni-regtest-homepage.png" alt="Bitcoin regtest页面"><br><img src="omni-regtest-dir.png" alt="Bitcoin regtest目录"></p>
</li>
</ol>
<h3 id="如何模拟BTC挖矿"><a href="#如何模拟BTC挖矿" class="headerlink" title="如何模拟BTC挖矿"></a>如何模拟BTC挖矿</h3><ol>
<li><p>打开<code>OmniCore</code>的控制台，窗口-&gt;控制台</p>
</li>
<li><p>生成一个地址用来存放挖矿收益</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">getnewaddress</span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-getnewaddress.png" alt="Bitcoin regtest获取一个新的地址"></p>
</li>
<li><p>开始手动挖矿，新挖出的BTC在可以使用前必须经过101个区块确认的成熟过程</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">generatetoaddress <span class="number">101</span> <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN</span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-generatetoaddress.png" alt="Bitcoin regtest手动挖101个块"><br>此时切换到概况页面可以看到有50BTC，这50BTC就是挖的第一个块的奖励<br><img src="omni-regtest-homepagebalance.png" alt="Bitcoin regtest首页查看余额"></p>
</li>
</ol>
<h3 id="如何模拟发布USDT代币（Token）"><a href="#如何模拟发布USDT代币（Token）" class="headerlink" title="如何模拟发布USDT代币（Token）"></a>如何模拟发布USDT代币（Token）</h3><ol>
<li><p>为了区分，再创建一个新的地址</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">getnewaddress</span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-getnewaddress2.png" alt="Bitcoin regtest获取一个新的地址"></p>
</li>
<li><p>往新地址发送10个BTC</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sendtoaddress <span class="number">2</span>NAZiD97N1WsJpQhw1z6n798NekdhycWHzY <span class="number">10</span></span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-sendtoaddress.png" alt="Bitcoin regtest发送10个BTC"><br>手动挖一个块，确认这笔交易</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">generatetoaddress <span class="number">1</span> <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN</span><br></pre></td></tr></table></figure></li>
<li><p>创建一个可管理的Token，记住返回的交易哈希</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_sendissuancemanaged &quot;<span class="number">2</span>NAZiD97N1WsJpQhw1z6n798NekdhycWHzY&quot; <span class="number">1</span> <span class="number">2</span> <span class="number">0</span> &quot;Financial and insurance activities&quot; &quot;Activities auxiliary to financial service and insurance activities&quot; &quot;TetherUS&quot; &quot;https://tether.to&quot; &quot;The next paradigm of money.&quot; </span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-sendissuancemanaged.png" alt="Bitcoin regtest创建一个Token"><br>手动挖一个块，确认这笔交易</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">generatetoaddress <span class="number">1</span> <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN</span><br></pre></td></tr></table></figure></li>
<li><p>获取这笔交易，都是创建的Token的详情，记住下面的<code>propertyid</code>，此处为<code>3</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_gettransaction <span class="number">81</span>f7a3408bb01fc41bdfb697403a493f1b601f7223be72ae2776df60baf8d54f</span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-omnigettokentransaction.png" alt="Bitcoin regtest获取token详情"></p>
</li>
<li><p>使用创建Token的地址发行代币，下面的<code>&quot;&quot;</code>表示发行到哪个地址，空表示发行到自己，此处即<code>2NAZiD97N1WsJpQhw1z6n798NekdhycWHzY</code>，<code>3</code>就是上一个步骤的<code>propertyid</code>，<code>10000</code>是发行数量</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_sendgrant <span class="number">2</span>NAZiD97N1WsJpQhw1z6n798NekdhycWHzY &quot;&quot; <span class="number">3</span> <span class="number">10000</span> &quot;First&quot;</span><br></pre></td></tr></table></figure>
<p>手动挖一个块，确认这笔交易</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">generatetoaddress <span class="number">1</span> <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN</span><br></pre></td></tr></table></figure>
<p>此时查看发行地址<code>2NAZiD97N1WsJpQhw1z6n798NekdhycWHzY</code>，已经有<code>10000</code>余额</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_getbalance <span class="number">2</span>NAZiD97N1WsJpQhw1z6n798NekdhycWHzY <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-omnigetbalance.png" alt="Bitcoin regtest查看发行地址余额"></p>
</li>
<li><p>此时可以将代币发送到其它地址</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_send <span class="number">2</span>NAZiD97N1WsJpQhw1z6n798NekdhycWHzY <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN <span class="number">3</span> <span class="number">100</span></span><br></pre></td></tr></table></figure>
<p>手动挖一个块，确认这笔交易</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">generatetoaddress <span class="number">1</span> <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN</span><br></pre></td></tr></table></figure>
<p>查询余额</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">omni_getbalance <span class="number">2</span>NDNJ4EHMKreNXXpFknqFWU6sjxNQemZrvN <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><img src="omni-regtest-omnigetbalance2.png" alt="Bitcoin regtest查看接收地址余额"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>BlockChain</category>
        <category>Bitcoin</category>
        <category>Omni</category>
      </categories>
  </entry>
</search>
